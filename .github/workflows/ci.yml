name: CI
on:
  push:
    branches:
      - dev
      - master
  pull_request:

jobs:
  dev-to-master-pr:
    name: Create or Update PR from Dev to Master
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Use a fixed branch name for the PR
      - name: Update dev-to-master branch
        run: |
          # Setup git
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          # Use a fixed branch name for consistency
          BRANCH_NAME="automated-dev-to-master-branch"

          # Force-push current dev state to the fixed branch
          git checkout -b $BRANCH_NAME
          git push --force origin $BRANCH_NAME

      # Create or update PR using GitHub API
      - name: Create or Update Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const prBranch = "automated-dev-to-master-branch";
            const prTitle = "Promote dev changes to master";
            const prBody = "This is an automated PR to promote changes from `dev` to `master`.\n\nPlease review the changes carefully before merging.";

            // Check if PR already exists
            const prs = await github.rest.pulls.list({
              owner,
              repo,
              head: `${owner}:${prBranch}`,
              base: 'master',
              state: 'open'
            });

            if (prs.data.length > 0) {
              // Update existing PR
              console.log(`Updating existing PR #${prs.data[0].number}`);
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: prs.data[0].number,
                title: prTitle,
                body: prBody
              });
            } else {
              // Create new PR
              try {
                const result = await github.rest.pulls.create({
                  owner,
                  repo,
                  title: prTitle,
                  body: prBody,
                  head: prBranch,
                  base: 'master'
                });
                console.log(`PR created: ${result.data.html_url}`);
              } catch (error) {
                console.log(`Error creating PR: ${error.message}`);
                throw error;
              }
            }

  release:
    name: release
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: simple
      - uses: actions/checkout@v4
      - name: tag stable versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release v${{ steps.release.outputs.version }}"
          git push origin stable
